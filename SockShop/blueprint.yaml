formatVersion: 1
name: CMBU-EPIC-Demo-Template
version: 1.0.1
inputs:
  user:
    type: string
    default: demouser
  password:
    type: string
    default: VMware1!
    encrypted: true
  count:
    type: integer
    title: Number of webservers?
    description: How many webservers do you need?
    default: 1
    enum:
      - 1
      - 2
      - 3
resources:
  Cloud_SaltStack_1:
    type: Cloud.SaltStack
    metadata:
      layoutPosition:
        - 0
        - 3
    properties:
      hosts:
        - ${resource["Web-Server"].id}
      masterId: saltstack_enterprise_installer
      minionId: ${self.resourceName}
      stateFiles:
        - /2-tier-opencart/init.sls
        - /loginsight/init.sls
      saltEnvironment: base
  Cloud_SaltStack_2:
    type: Cloud.SaltStack
    metadata:
      layoutPosition:
        - 0
        - 4
    properties:
      hosts:
        - ${resource["DB-Server"].id}
      masterId: saltstack_enterprise_installer
      minionId: ${self.resourceName}
      stateFiles:
        - /2-tier-opencart-db/init.sls
        - /loginsight/init.sls
      saltEnvironment: base
  Cloud_SecurityGroup_1:
    type: Cloud.SecurityGroup
    metadata:
      layoutPosition:
        - 1
        - 3
    properties:
      constraints:
        - tag: sg:thesockshop-app
      securityGroupType: existing
  Cloud_SecurityGroup_2:
    type: Cloud.SecurityGroup
    metadata:
      layoutPosition:
        - 1
        - 4
    properties:
      constraints:
        - tag: sg:thesockshop-db
      securityGroupType: existing
  loadgen:
    type: Cloud.Machine
    metadata:
      layoutPosition:
        - 2
        - 1
    properties:
      prefix: loadgen
      image: linux-ubuntu-18.04
      flavor: large
      newName: ${self.resourceName}
      cloudConfig: |
        #cloud-config
        hostname: ${self.resourceName}

        users:
          - name: ${input.user}
            sudo: ['ALL=(ALL) NOPASSWD:ALL']
            groups: sudo
            shell: /bin/bash
            
        runcmd:
          - echo $USER:$PASS | /usr/sbin/chpasswd
            
      remoteAccess:
        authentication: usernamePassword
        username: root
        password: ${secret.SockshopLabPassword}
      networks:
        - network: ${resource.Cloud_Network_1.id}
      constraints:
        - tag: cloud:vcf
  Web-Server:
    type: Cloud.Machine
    dependsOn:
      - DB-Server
    metadata:
      layoutPosition:
        - 2
        - 3
    properties:
      prefix: sockshop-app #Extensibility -> Subscriptions!
      image: linux-ubuntu-18.04
      flavor: medium
      newName: ${self.resourceName}
      cloudConfig: |
        #cloud-config
        hostname: ${self.resourceName}

        users:
          - name: ${input.user}
            sudo: ['ALL=(ALL) NOPASSWD:ALL']
            groups: sudo
            shell: /bin/bash
            
        runcmd:
          - echo $USER:$PASS | /usr/sbin/chpasswd
          - sudo echo ${resource.DB-Server.networks.address[0]} >> /tmp/dbip.txt
      remoteAccess:
        authentication: usernamePassword
        username: root
        password: ${secret.SockshopLabPassword}
      networks:
        - network: ${resource.Cloud_Network_1.id}
          securityGroups:
            - ${resource.Cloud_SecurityGroup_1.id}
      constraints:
        - tag: cloud:vcf
      count: ${input.count}
      tags:
        - key: SLA
          value: silver
        - key: BU
          value: IT-OPS
        - key: APPNAME
          value: sockshop
        - key: type
          value: webserver
  DB-Server:
    type: Cloud.Machine
    metadata:
      layoutPosition:
        - 2
        - 4
    properties:
      prefix: sockshop-db
      image: linux-ubuntu-18.04
      flavor: medium
      newName: ${self.resourceName}
      cloudConfig: |
        #cloud-config
        hostname: ${self.resourceName}

        users:
          - name: ${input.user}
            sudo: ['ALL=(ALL) NOPASSWD:ALL']
            groups: sudo
            shell: /bin/bash
            
        runcmd:
          - echo $USER:$PASS | /usr/sbin/chpasswd
            
      remoteAccess:
        authentication: usernamePassword
        username: root
        password: ${secret.SockshopLabPassword}
      networks:
        - network: ${resource.Cloud_Network_2.id}
          securityGroups:
            - ${resource.Cloud_SecurityGroup_2.id}
      constraints:
        - tag: cloud:vcf
      tags:
        - key: SLA
          value: gold
        - key: BU
          value: IT-OPS
        - key: APPNAME
          value: sockshop
        - key: type
          value: dbserver
      cloudConfigSettings: null
  Cloud_NSX_LoadBalancer_1:
    type: Cloud.NSX.LoadBalancer
    metadata:
      layoutPosition:
        - 3
        - 2
    properties:
      routes:
        - protocol: HTTP
          port: 80
          instancePort: 80
          instanceProtocol: HTTP
          algorithm: ROUND_ROBIN
          healthCheckConfiguration:
            protocol: HTTP
            port: 80
            urlPath: /index.php
            intervalSeconds: 5
            timeoutSeconds: 10
            unhealthyThreshold: 3
            healthyThreshold: 2
      instances: ${resource.Web-Server[*].id}
      network: ${resource.Cloud_Network_1.id}
  Cloud_Network_1:
    type: Cloud.vSphere.Network
    metadata:
      layoutPosition:
        - 4
        - 0
    properties:
      networkType: existing
      constraints:
        - tag: net:the-sockshop-app01
  Cloud_Network_2:
    type: Cloud.vSphere.Network
    metadata:
      layoutPosition:
        - 5
        - 0
    properties:
      networkType: existing
      constraints:
        - tag: net:the-sockshop-db01
